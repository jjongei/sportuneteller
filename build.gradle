buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.sportuenteller'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	runtime('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('mysql:mysql-connector-java')
	compileOnly('org.projectlombok:lombok')

	compile('org.apache.commons:commons-lang3:3.7')

	compile('org.webjars.bower:bootstrap:3.3.4')
	compile('org.webjars.bower:jquery:2.1.3')
	compile('org.webjars.bower:jquery-validation:1.17.0')

	compile('org.apache.poi:poi-ooxml:3.14')

	/*
	 *Query DSL
	 */
	def querydslVersion = "4.1.4"

	compile ("com.querydsl:querydsl-core:$querydslVersion")
	compile ("com.querydsl:querydsl-apt:$querydslVersion")
	compile ("com.querydsl:querydsl-jpa:$querydslVersion")
}

sourceSets {
	main {
		java {
			srcDirs 'src/main/java', 'src/main/generated'
		}
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	file(new File(projectDir, "/src/main/generated")).deleteDir()
	file(new File(projectDir, "/src/main/generated")).mkdirs()

	source = sourceSets.main.java
	classpath = configurations.compile + configurations.compileOnly
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = file('src/main/generated')
}

compileJava {
	dependsOn generateQueryDSL
}

clean.doLast {
	file(new File(projectDir, "/src/main/generated")).deleteDir()
}

